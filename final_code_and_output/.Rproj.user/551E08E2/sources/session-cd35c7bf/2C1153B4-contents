---
title: "analysis_sim_tracts"
output: html_document
date: "2024-09-02"
---

```{r setup, include=FALSE}
library(tidyverse)

geom.res <- readRDS("res.geom.rds")
geom2.res <- readRDS("res.geom2.rds")
nbinom.res <- readRDS("res.nbinom.rds")
unif.res <- readRDS("res.unif.rds")
```

```{r}
geom.res.geom <- lapply(geom.res, function(x) {x[[1]][[1]]}) %>% unlist()
geom2.res.geom <- lapply(geom2.res, function(x) {x[[1]][[1]]}) %>% unlist()
nbinom.res.geom <- lapply(nbinom.res, function(x) {x[[1]][[1]]}) %>% unlist()
unif.res.geom <- lapply(unif.res, function(x) {x[[1]][[1]]}) %>% unlist()

geom.res.geom2 <- lapply(geom.res, function(x) {x[[2]][[1]]}) %>% unlist()
geom2.res.geom2 <- lapply(geom2.res, function(x) {x[[2]][[1]]}) %>% unlist()
nbinom.res.geom2 <- lapply(nbinom.res, function(x) {x[[2]][[1]]}) %>% unlist()
unif.res.geom2 <- lapply(unif.res, function(x) {x[[2]][[1]]}) %>% unlist()
```

```{r}
mean(1/geom.res.geom) - 300
mean(1/geom2.res.geom) - 300
mean(1/nbinom.res.geom) - 300
mean(1/unif.res.geom) - 300

mean(2/geom.res.geom2) - 300
mean(2/geom2.res.geom2) - 300
mean(2/nbinom.res.geom2) - 300
mean(2/unif.res.geom2) - 300
```

```{r}
geom.res.geom.nll <- lapply(geom.res, function(x) {x[[1]][[2]]}) %>% unlist()
geom2.res.geom.nll <- lapply(geom2.res, function(x) {x[[1]][[2]]}) %>% unlist()
nbinom.res.geom.nll <- lapply(nbinom.res, function(x) {x[[1]][[2]]}) %>% unlist()
unif.res.geom.nll <- lapply(unif.res, function(x) {x[[1]][[2]]}) %>% unlist()

geom.res.geom2.nll <- lapply(geom.res, function(x) {x[[2]][[2]]}) %>% unlist()
geom2.res.geom2.nll <- lapply(geom2.res, function(x) {x[[2]][[2]]}) %>% unlist()
nbinom.res.geom2.nll <- lapply(nbinom.res, function(x) {x[[2]][[2]]}) %>% unlist()
unif.res.geom2.nll <- lapply(unif.res, function(x) {x[[2]][[2]]}) %>% unlist()

mean(geom.res.geom.nll < geom.res.geom2.nll)
mean(geom2.res.geom.nll < geom2.res.geom2.nll)
mean(nbinom.res.geom.nll < nbinom.res.geom2.nll)
mean(unif.res.geom.nll < unif.res.geom2.nll)
```

```{r}
geom.res.aic <- ifelse(geom.res.geom.nll < geom.res.geom2.nll, 1/geom.res.geom, 2/geom.res.geom2)
geom2.res.aic <- ifelse(geom2.res.geom.nll < geom2.res.geom2.nll, 1/geom2.res.geom, 2/geom2.res.geom2)
nbinom.res.aic <- ifelse(nbinom.res.geom.nll < nbinom.res.geom2.nll, 1/nbinom.res.geom, 2/nbinom.res.geom2)
unif.res.aic <- ifelse(unif.res.geom.nll < unif.res.geom2.nll, 1/unif.res.geom, 2/unif.res.geom2)

mean(geom.res.aic) - 300
mean(geom2.res.aic) - 300
mean(nbinom.res.aic) - 300
mean(unif.res.aic) - 300
```



```{r}
geom.res.CI <- lapply(geom.res, function(x) {x[[3]] %>% unlist() %>% matrix(ncol = 2, byrow = TRUE) %>% apply(2, quantile, probs = c(0.025, 0.975))})
geom2.res.CI <- lapply(geom2.res, function(x) {x[[3]] %>% unlist() %>% matrix(ncol = 2, byrow = TRUE) %>% apply(2, quantile, probs = c(0.025, 0.975))})
nbinom.res.CI <- lapply(nbinom.res, function(x) {x[[3]] %>% unlist() %>% matrix(ncol = 2, byrow = TRUE) %>% apply(2, quantile, probs = c(0.025, 0.975))})
unif.res.CI <- lapply(unif.res, function(x) {x[[3]] %>% unlist() %>% matrix(ncol = 2, byrow = TRUE) %>% apply(2, quantile, probs = c(0.025, 0.975))})

geom.res.coverage.geom <- lapply(geom.res.CI, function(x) {300 <= 1/x[1,1] & 300 >= 1/x[2,1]}) %>% unlist() %>% mean()
geom2.res.coverage.geom <- lapply(geom2.res.CI, function(x) {300 <= 1/x[1,1] & 300 >= 1/x[2,1]}) %>% unlist() %>% mean()
nbinom.res.coverage.geom <- lapply(nbinom.res.CI, function(x) {300 <= 1/x[1,1] & 300 >= 1/x[2,1]}) %>% unlist() %>% mean()
unif.res.coverage.geom <- lapply(unif.res.CI, function(x) {300 <= 1/x[1,1] & 300 >= 1/x[2,1]}) %>% unlist() %>% mean()

geom.res.coverage.geom2 <- lapply(geom.res.CI, function(x) {300 <= 2/x[1,2] & 300 >= 2/x[2,2]}) %>% unlist() %>% mean()
geom2.res.coverage.geom2 <- lapply(geom2.res.CI, function(x) {300 <= 2/x[1,2] & 300 >= 2/x[2,2]}) %>% unlist() %>% mean()
nbinom.res.coverage.geom2 <- lapply(nbinom.res.CI, function(x) {300 <= 2/x[1,2] & 300 >= 2/x[2,2]}) %>% unlist() %>% mean()
unif.res.coverage.geom2 <- lapply(unif.res.CI, function(x) {300 <= 2/x[1,2] & 300 >= 2/x[2,2]}) %>% unlist() %>% mean()
```

```{r}
geom.res.coverage.geom
```


